CLASS none/a net/minecraft/chat/EnumChatFormatting
	FIELD a BLACK Lnone/a;
	FIELD b DARK_BLUE Lnone/a;
	FIELD c DARK_GREEN Lnone/a;
	FIELD d DARK_AQUA Lnone/a;
	FIELD e DARK_RED Lnone/a;
	FIELD f DARK_PURPLE Lnone/a;
	FIELD g GOLD Lnone/a;
	FIELD h GRAY Lnone/a;
	FIELD i DARK_GRAY Lnone/a;
	FIELD j BLUE Lnone/a;
	FIELD k GREEN Lnone/a;
	FIELD l AQUA Lnone/a;
	FIELD m RED Lnone/a;
	FIELD n LIGHT_PURPLE Lnone/a;
	FIELD o YELLOW Lnone/a;
	FIELD p WHITE Lnone/a;
	FIELD q OBFUSCATED Lnone/a;
	FIELD r BOLD Lnone/a;
	FIELD s STRIKETHROUGH Lnone/a;
	FIELD t UNDERLINE Lnone/a;
	FIELD u ITALIC Lnone/a;
	FIELD v RESET Lnone/a;
	FIELD x formattingPattern Ljava/util/regex/Pattern;
CLASS none/b net/minecraft/util/crash/CrashReportBuilder
	FIELD a logger Lorg/apache/logging/log4j/Logger;
	FIELD c cause Ljava/lang/Throwable;
	FIELD f file Ljava/io/File;
	FIELD h stackTrace [Ljava/lang/StackTraceElement;
	METHOD <init> (Ljava/lang/String;Ljava/lang/Throwable;)V
		ARG 1 cause
CLASS none/c net/minecraft/util/crash/CrashReportGroup
	CLASS none/c$a CrashReportItem
		FIELD a name Ljava/lang/String;
		FIELD b value Ljava/lang/String;
		METHOD <init> (Ljava/lang/String;Ljava/lang/Object;)V
			ARG 0 name
			ARG 1 value
		METHOD a getName ()Ljava/lang/String;
		METHOD b getValue ()Ljava/lang/String;
	FIELD a builder Lnone/b;
	FIELD b name Ljava/lang/String;
	FIELD c items Ljava/util/List;
	FIELD d stackTrace [Ljava/lang/StackTraceElement;
	METHOD <init> (Lnone/b;Ljava/lang/String;)V
		ARG 0 builder
		ARG 1 name
	METHOD a getStackTrace ()[Ljava/lang/StackTraceElement;
	METHOD a add (Ljava/lang/String;Ljava/lang/Object;)V
		ARG 0 name
	METHOD a add (Ljava/lang/String;Ljava/lang/Throwable;)V
		ARG 0 name
	METHOD a add (Ljava/lang/String;Ljava/util/concurrent/Callable;)V
		ARG 0 name
CLASS none/g net/minecraft/util/MiscUtils
	CLASS none/g$a EnumOS
		FIELD a LINUX Lnone/g$a;
		FIELD b SOLARIS Lnone/g$a;
		FIELD c WINDOWS Lnone/g$a;
		FIELD d MACOSX Lnone/g$a;
		FIELD e OTHER Lnone/g$a;
	METHOD a getOS ()Lnone/g$a;
	METHOD a getLast (Ljava/util/List;)Ljava/lang/Object;
		ARG 0 list
	METHOD a runFutureTask (Ljava/util/concurrent/FutureTask;Lorg/apache/logging/log4j/Logger;)Ljava/lang/Object;
		ARG 0 task
		ARG 1 logger
CLASS none/i net/minecraft/command/base/CommandBase
CLASS none/k net/minecraft/command/base/ICommand
	METHOD c getName ()Ljava/lang/String;
CLASS none/p
	METHOD c getName ()Ljava/lang/String;
CLASS none/q
	METHOD c getName ()Ljava/lang/String;
CLASS none/r
	METHOD c getName ()Ljava/lang/String;
CLASS none/s
	METHOD c getName ()Ljava/lang/String;
CLASS none/t
	METHOD c getName ()Ljava/lang/String;
CLASS none/u
	METHOD c getName ()Ljava/lang/String;
CLASS none/v
	METHOD c getName ()Ljava/lang/String;
CLASS none/w
	METHOD c getName ()Ljava/lang/String;
CLASS none/x
	METHOD c getName ()Ljava/lang/String;
CLASS none/y
	METHOD c getName ()Ljava/lang/String;
CLASS none/z net/minecraft/command/CommandEffect
	METHOD c getName ()Ljava/lang/String;
CLASS none/aa
	METHOD c getName ()Ljava/lang/String;
CLASS none/ab
	METHOD c getName ()Ljava/lang/String;
CLASS none/ac
	METHOD c getName ()Ljava/lang/String;
CLASS none/ad
	METHOD c getName ()Ljava/lang/String;
CLASS none/ae
	METHOD c getName ()Ljava/lang/String;
CLASS none/af
	METHOD c getName ()Ljava/lang/String;
CLASS none/ag
	METHOD c getName ()Ljava/lang/String;
CLASS none/ah
	METHOD c getName ()Ljava/lang/String;
CLASS none/ai
	METHOD c getName ()Ljava/lang/String;
CLASS none/aj
	METHOD c getName ()Ljava/lang/String;
CLASS none/ak
	METHOD c getName ()Ljava/lang/String;
CLASS none/al
	METHOD c getName ()Ljava/lang/String;
CLASS none/am
	METHOD c getName ()Ljava/lang/String;
CLASS none/an
	METHOD c getName ()Ljava/lang/String;
CLASS none/ao
	METHOD c getName ()Ljava/lang/String;
CLASS none/ap
	METHOD c getName ()Ljava/lang/String;
CLASS none/aq
	METHOD c getName ()Ljava/lang/String;
CLASS none/ar
	METHOD c getName ()Ljava/lang/String;
CLASS none/as
	METHOD c getName ()Ljava/lang/String;
CLASS none/at
	METHOD c getName ()Ljava/lang/String;
CLASS none/au
	METHOD c getName ()Ljava/lang/String;
CLASS none/av
	METHOD c getName ()Ljava/lang/String;
CLASS none/aw
	METHOD c getName ()Ljava/lang/String;
CLASS none/ax
	METHOD c getName ()Ljava/lang/String;
CLASS none/ay
	METHOD c getName ()Ljava/lang/String;
CLASS none/az
	METHOD c getName ()Ljava/lang/String;
CLASS none/ba
	METHOD c getName ()Ljava/lang/String;
CLASS none/bb
	METHOD c getName ()Ljava/lang/String;
CLASS none/bc
	METHOD c getName ()Ljava/lang/String;
CLASS none/be
	METHOD c getName ()Ljava/lang/String;
CLASS none/bf
	METHOD c getName ()Ljava/lang/String;
CLASS none/bg
	METHOD c getName ()Ljava/lang/String;
CLASS none/bh
	METHOD c getName ()Ljava/lang/String;
CLASS none/bi
	METHOD c getName ()Ljava/lang/String;
CLASS none/bj
	METHOD c getName ()Ljava/lang/String;
CLASS none/bk
	METHOD c getName ()Ljava/lang/String;
CLASS none/bl
	METHOD c getName ()Ljava/lang/String;
CLASS none/bm
	METHOD c getName ()Ljava/lang/String;
CLASS none/bn
	METHOD c getName ()Ljava/lang/String;
CLASS none/bp
	METHOD c getName ()Ljava/lang/String;
CLASS none/bq
	METHOD c getName ()Ljava/lang/String;
CLASS none/br
	METHOD c getName ()Ljava/lang/String;
CLASS none/bs
	METHOD c getName ()Ljava/lang/String;
CLASS none/bt
	METHOD c getName ()Ljava/lang/String;
CLASS none/bu
	METHOD c getName ()Ljava/lang/String;
CLASS none/bv
	METHOD c getName ()Ljava/lang/String;
CLASS none/bw
	METHOD c getName ()Ljava/lang/String;
CLASS none/bx
	METHOD c getName ()Ljava/lang/String;
CLASS none/cj net/minecraft/util/BlockCoord
	CLASS none/cj$a
		METHOD n getX ()I
		METHOD o getY ()I
		METHOD p getZ ()I
	METHOD <init> (Lnone/df;)V
		ARG 0 vec
CLASS none/df net/minecraft/util/Vec3i
	FIELD a x I
	FIELD b NULL_VECTOR Lnone/df;
	FIELD c y I
	FIELD d z I
	METHOD <init> (DDD)V
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD <init> (III)V
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD n getX ()I
	METHOD o getY ()I
	METHOD p getZ ()I
CLASS none/nu net/minecraft/util/MathUtils
	FIELD c random Ljava/util/Random;
	METHOD a sqrt (D)F
	METHOD c sqrt (F)F
	METHOD c hsvToRgb (FFF)I
CLASS none/awh net/minecraft/util/Vec3d
	FIELD a x D
	FIELD b y D
	FIELD c z D
	METHOD <init> (DDD)V
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD <init> (Lnone/df;)V
		ARG 0 vec
	METHOD a invert (DDD)Lnone/awh;
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD a subtract (Lnone/awh;)Lnone/awh;
		ARG 0 vec
	METHOD b add (DDD)Lnone/awh;
		ARG 0 x
		ARG 1 y
		ARG 2 z
	METHOD b multiply (Lnone/awh;)D
		ARG 0 vec
	METHOD d invert (Lnone/awh;)Lnone/awh;
		ARG 0 vec
	METHOD e add (Lnone/awh;)Lnone/awh;
		ARG 0 vec
